---
openapi: 3.0.0
info:
  title: Switch API
  description: Real-time performance and health monitoring.
  version: 1.0.0
paths:
  /v1/webhooks:
    get:
      operationId: ListWebhooks
      tags:
      - webhooks
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksList'
    post:
      operationId: CreateWebhook
      summary: Create webhook
      tags:
      - webhooks
      requestBody:
        $ref: '#/components/requestBodies/WebhookCreateInput'
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
                
  /v1/webhooks/{webhookId}:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetWebhook
      summary: Get Webhook
      tags:
      - webhooks
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    put:
      operationId: UpdateWebhook
      summary: Update Webhook
      tags:
      - webhooks
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    delete:
      operationId: DeleteWebhook
      summary: DeleteWebhook
      tags:
      - webhooks
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
                
  /v1/webhooks/{webhookId}/events:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: ListEvents
      summary: List Events
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    post:
      operationId: CreateEvent
      summary: Create Event
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      requestBody:
        $ref: '#/components/requestBodies/EventCreateInput'
                
  /v1/webhooks/{webhookId}/targets:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: ListTargets
      summary: List Targets
      description: lorem
      tags:
      - targets
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
    post:
      operationId: CreateTarget
      summary: Create Target
      description: lorem
      tags:
      - targets
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      requestBody:
        $ref: '#/components/requestBodies/TargetCreateInput'

  /v1/webhooks/{webhookId}/targets/{targetId}:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: targetId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetTarget
      summary: Get Target
      description: lorem
      tags:
      - targets
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
    put:
      operationId: UpdateTarget
      summary: Update Target
      description: lorem
      tags:
      - targets
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
    delete:
      operationId: DeleteTarget
      summary: Delete Target
      description: lorem
      tags:
      - targets
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'


  /v1/webhooks/{webhookId}/events/{eventId}:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: eventId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetEvent
      summary: Get Event
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'


  /v1/webhooks/{webhookId}/targets/{targetId}/token:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: targetId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetToken
      summary: Get Token
      description: lorem
      tags:
      - targets
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
    post:
      operationId: CreateToken
      summary: Create Token
      description: lorem
      tags:
      - targets
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'


components:
  requestBodies:
    EventCreateInput:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventCreateInput'

    TargetCreateInput:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TargetCreateInput'


    WebhookCreateInput:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookCreateInput'
            
  schemas:
    WebhooksList:
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
            
    Webhook:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    Token:
      type: object
      properties:
        secret:
          type: string
        created_at:
          type: string
          format: date-time

    WebhookCreateInput:
      type: object
      properties:
        name:
          type: string

    EventCreateInput:
      type: object
      properties:
        type:
          type: string
          example: customer.subscribe
        data:
          type: object

    TargetCreateInput:
      type: object
      properties:
        url:
          type: string
          example: "https://example.com/v1/customers"
        ca_certificate:
          type: string
        client_certificate:
          type: string


    Event:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        type:
          type: string
          example: "customer.create"
        data:
          type: object
        status:
          type: object
          properties:
            code:
              type: integer
            class:
              type: string
              enum:
              - SUCCESS
              - FAILURE
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Target:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        type:
          type: string
          example: "customer.create"
        data:
          type: object
        status:
          type: object
          properties:
            code:
              type: integer
            class:
              type: string
              enum:
              - SUCCESS
              - FAILURE
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
