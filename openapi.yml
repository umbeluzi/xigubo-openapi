---
openapi: 3.0.0
info:
  title: Switch API
  description: Real-time performance and health monitoring.
  version: 1.0.0
paths:
  /v1/webhooks:
    get:
      operationId: ListWebhooks
      summary: List webhooks
      tags:
      - webhooks
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksList'
    post:
      operationId: CreateWebhook
      summary: Create webhook
      tags:
      - webhooks
      requestBody:
        $ref: '#/components/requestBodies/WebhookCreateInput'
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
                
  /v1/webhooks/{webhookId}:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetWebhook
      summary: Get Webhook
      tags:
      - webhooks
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    put:
      operationId: UpdateWebhook
      summary: Update Webhook
      tags:
      - webhooks
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    delete:
      operationId: DeleteWebhook
      summary: DeleteWebhook
      tags:
      - webhooks
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
                
  /v1/webhooks/{webhookId}/events:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: ListEvents
      summary: List Events
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    post:
      operationId: CreateEvent
      summary: Create Event
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      requestBody:
        $ref: '#/components/requestBodies/EventCreateInput'
                
  /v1/webhooks/{webhookId}/subscribers:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: ListSubscribers
      summary: List Subscribers
      description: lorem
      tags:
      - subscribers
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
    post:
      operationId: CreateSubscriber
      summary: Create Subscriber
      description: lorem
      tags:
      - subscribers
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
      requestBody:
        $ref: '#/components/requestBodies/SubscriberCreateInput'

  /v1/webhooks/{webhookId}/subscribers/{subscriberId}:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: subscriberId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetSubscriber
      summary: Get Subscriber
      description: lorem
      tags:
      - subscribers
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
    put:
      operationId: UpdateSubscriber
      summary: Update Subscriber
      description: lorem
      tags:
      - subscribers
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
    delete:
      operationId: DeleteSubscriber
      summary: Delete Subscriber
      description: lorem
      tags:
      - subscribers
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'


  /v1/webhooks/{webhookId}/events/{eventId}:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: eventId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetEvent
      summary: Get Event
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'


  /v1/webhooks/{webhookId}/subscribers/{subscriberId}/credentials:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: subscriberId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetCredentials
      summary: Get Credentials
      description: lorem
      tags:
      - subscribers
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
    put:
      operationId: UpdateCredentials
      summary: Update Credentials
      description: lorem
      tags:
      - subscribers
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'


components:
  requestBodies:
    EventCreateInput:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventCreateInput'

    SubscriberCreateInput:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriberCreateInput'


    WebhookCreateInput:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookCreateInput'
            
  schemas:
    WebhooksList:
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
            
    Webhook:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    Credentials:
      type: object
      properties:
        secret:
          type: string
        created_at:
          type: string
          format: date-time

    WebhookCreateInput:
      type: object
      properties:
        name:
          type: string

    EventCreateInput:
      type: object
      properties:
        type:
          type: string
          example: customer.subscribe
        data:
          type: object

    SubscriberCreateInput:
      type: object
      properties:
        url:
          type: string
          example: "https://example.com/v1/customers"
        ca_certificate:
          type: string
        client_certificate:
          type: string

    Event:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        type:
          type: string
          example: "customer.create"
        data:
          type: object
        status:
          type: object
          properties:
            code:
              type: integer
            class:
              type: string
              enum:
              - SUCCESS
              - FAILURE
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Subscriber:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        type:
          type: string
          example: "customer.create"
        data:
          type: object
        status:
          type: object
          properties:
            code:
              type: integer
            class:
              type: string
              enum:
              - SUCCESS
              - FAILURE
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
