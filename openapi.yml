---
openapi: 3.0.0
info:
  title: Switch API
  description: Real-time performance and health monitoring.
  version: 1.0.0
paths:
  /v1/events-types:
    get:
      operationId: ListEventTypes
      summary: List event types
      tags:
      - event types
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksList'
    post:
      operationId: CreateWebhook
      summary: Create webhook
      tags:
      - event types
      requestBody:
        $ref: '#/components/requestBodies/WebhookCreate'
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
                
  /v1/events-types/{eventTypeId}:
    parameters:
    - name: eventTypeId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetEventType
      summary: Get event type
      tags:
      - event types
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    put:
      operationId: UpdateEventType
      summary: Update event type
      tags:
      - event types
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    delete:
      operationId: DeleteEventType
      summary: Delete event type
      tags:
      - event types
      responses:
        "200":
          description: lorem ipsum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
                
  /v1/webhooks/{webhookId}/events:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: ListEvents
      summary: List Events
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    post:
      operationId: CreateEvent
      summary: Create Event
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      requestBody:
        $ref: '#/components/requestBodies/EventCreate'
                
  /v1/webhooks/{webhookId}/subscriptions:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: ListSubscriptions
      summary: List Subscriptions
      description: lorem
      tags:
      - subscriptions
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    post:
      operationId: CreateSubscription
      summary: Create Subscription
      description: lorem
      tags:
      - subscriptions
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      requestBody:
        $ref: '#/components/requestBodies/SubscriptionCreate'

  /v1/webhooks/{webhookId}/subscriptions/{subscriptionId}:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: subscriptionId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetSubscription
      summary: Get Subscription
      description: lorem
      tags:
      - subscriptions
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    put:
      operationId: UpdateSubscription
      summary: Update Subscription
      description: lorem
      tags:
      - subscriptions
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    delete:
      operationId: DeleteSubscription
      summary: Delete Subscription
      description: lorem
      tags:
      - subscriptions
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  /v1/webhooks/{webhookId}/events/{eventId}:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: eventId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetEvent
      summary: Get Event
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'

  /v1/webhooks/{webhookId}/subscriptions/{subscriptionId}/credentials:
    parameters:
    - name: webhookId
      in: path
      required: true
      schema:
        type: string
    - name: subscriptionId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: GetCredentials
      summary: Get Credentials
      description: lorem
      tags:
      - subscriptions
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
    put:
      operationId: UpdateCredentials
      summary: Update Credentials
      description: lorem
      tags:
      - subscriptions
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'

  /v1/events/{eventId}/retry:
    parameters:
    - name: eventId
      in: path
      required: true
      schema:
        type: string
    get:
      operationId: ResendEvent
      summary: Get Event
      description: lorem
      tags:
      - events
      responses:
        "200":
          description: netdata basic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

components:
  requestBodies:
    EventCreate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventCreate'

    SubscriptionCreate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionCreate'


    WebhookCreate:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookCreate'
            
  schemas:
    WebhooksList:
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
            
    Webhook:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    Credentials:
      type: object
      properties:
        secret:
          type: string
        created_at:
          type: string
          format: date-time

    WebhookCreate:
      type: object
      properties:
        name:
          type: string

    EventCreate:
      type: object
      properties:
        event_type:
          type: string
          example: customer.subscribe
        topic:
          type: string
        data:
          type: object

    SubscriptionCreate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        url:
          type: string
          example: "https://example.com/v1/customers"
        filter:
          type: object
          properties:
            topics:
              type: array
              items:
                type: string
            event_types:
              type: array
              items:
                type: string
        topics:
          type: array
          items:
            type: string
        rate_limit:
          type: object
        timeout:
          type: integer
        retry:
          type: object
          properties:
            strategy:
              type: string
              enum:
                - EXPONENTIAL
                - LINEAR
                - CONSTANT
            initial_interval:
              type: integer
            max_attempts:
              type: integer
        security:
          type: object
          properties:
            tls_ca_cert:
              type: string
            tls_client_cert:
              type: string
      required:
        - name
        - description

    Event:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        type:
          type: string
          example: "customer.create"
        data:
          type: object
        status:
          type: object
          properties:
            code:
              type: integer
            class:
              type: string
              enum:
              - SUCCESS
              - FAILURE
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Subscription:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        type:
          type: string
          example: "customer.create"
        data:
          type: object
        status:
          type: object
          properties:
            code:
              type: integer
            class:
              type: string
              enum:
              - SUCCESS
              - FAILURE
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
